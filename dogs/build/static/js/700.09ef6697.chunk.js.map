{"version":3,"file":"static/js/700.09ef6697.chunk.js","mappings":"sKACA,EAAwB,+BAAxB,EAAmE,mCAAnE,EAA8G,+B,8BCA9G,EAA4B,iC,SCU5B,EARsB,SAAHA,GAAqB,IAAfC,EAAOD,EAAPC,QACvB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,KAAA,KAAAG,SAAIJ,KAGV,ECiDA,EArDwB,SAAHD,GAAkB,IAAZM,EAAIN,EAAJM,KACzBC,EAA0BC,EAAAA,SAAe,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,EAA0BL,EAAAA,SAAe,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAsBtB,OApBAN,EAAAA,WAAgB,WACd,GAAIF,EAAKW,OAAS,EAAG,CACnB,IAAMC,EAAYZ,EAAKa,KAAI,SAACC,GAC1B,IAAMC,EAAUD,EAAKC,QAAU,EAAI,EAAIC,OAAOF,EAAKC,SACnD,MAAO,CACLE,EAAGH,EAAKI,MACRC,EAAGJ,EAIP,IAGAT,EAASM,GAETF,EACEV,EAAKa,KAAI,SAAAO,GAAA,IAAGL,EAAOK,EAAPL,QAAO,OAAOC,OAAOD,EAAQ,IAAEM,QAAO,SAACC,EAAGC,GAAC,OAAKD,EAAIC,CAAC,IAErE,CACF,GAAG,CAACvB,IACAK,EAAMM,OAAS,GAEfa,EAAAA,EAAAA,MAAA,WAAS3B,UAAS,GAAA4B,OAAK3B,EAAY,cAAaC,SAAA,EAC9CH,EAAAA,EAAAA,KAAA,OAAKC,UAAS,GAAA4B,OAAK3B,EAAY,KAAA2B,OAAI3B,GAAmBC,UACpDyB,EAAAA,EAAAA,MAAA,KAAAzB,SAAA,CAAG,WAASU,EAAQ,EAAI,EAAIA,QAG9Bb,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CACT1B,KAAMK,EACNsB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACLjC,KAAM,CAAEkC,YAAa,GAAKC,OAAQ,OAAQC,YAAa,GACvDC,OAAQ,CAAEC,SAAU,GAAIC,KAAM,cAKpC3C,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,KAAC4C,EAAAA,EAAY,CAAAzC,UACXH,EAAAA,EAAAA,KAAC6C,EAAAA,EAAU,CAACC,UAAU,QAAQ1C,KAAMK,YAKlCT,EAAAA,EAAAA,KAAC+C,EAAa,CAAChD,QAAQ,mCACrC,C","sources":["webpack://dogs/./src/Components/User/UserStatsGraphs.module.css?5413","webpack://dogs/./src/Components/Helper/AlternateText.module.css?df5d","Components/Helper/AlternateText.jsx","Components/User/UserStatsGraphs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"graph\":\"UserStatsGraphs_graph__e6Srp\",\"graphItem\":\"UserStatsGraphs_graphItem__kzM4m\",\"total\":\"UserStatsGraphs_total__z2uug\"};","// extracted by mini-css-extract-plugin\nexport default {\"alternate\":\"AlternateText_alternate__AeCba\",\"blink\":\"AlternateText_blink__+OEAy\"};","import React from \"react\";\nimport styles from \"./AlternateText.module.css\";\n\nconst AlternateText = ({ altText }) => {\n  return (\n    <div className={styles.alternate}>\n      <p>{altText}</p>\n    </div>\n  );\n};\n\nexport default AlternateText;\n","import React from \"react\";\nimport styles from \"./UserStatsGraphs.module.css\";\nimport { VictoryPie, VictoryChart, VictoryBar } from \"victory\";\nimport AlternateText from \"../Helper/AlternateText\";\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = React.useState([]);\n  const [total, setTotal] = React.useState(0);\n\n  React.useEffect(() => {\n    if (data.length > 0) {\n      const graphData = data.map((item) => {\n        const acessos = item.acessos < 1 ? 1 : Number(item.acessos);\n        return {\n          x: item.title,\n          y: acessos\n          \n        };\n        \n      });\n      \n\n      setGraph(graphData);\n\n      setTotal(\n        data.map(({ acessos }) => Number(acessos)).reduce((a, b) => a + b)\n      );\n    }\n  }, [data]);\n  if (graph.length > 0)\n    return (\n      <section className={`${styles.graph} animeLeft`}>\n        <div className={`${styles.total} ${styles.graphItem}`}>\n          <p>Views : {total < 1 ? 1 : total}</p>\n        </div>\n\n        <div className={styles.graphItem}>\n          <VictoryPie\n            data={graph}\n            innerRadius={50}\n            padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\n            style={{\n              data: { fillOpacity: 0.9, stroke: \"#fff\", strokeWidth: 2 },\n              labels: { fontSize: 14, fill: \"#333\" },\n            }}\n          />\n        </div>\n        \n        <div className={styles.graphItem}>\n          <VictoryChart>\n            <VictoryBar alignment=\"start\" data={graph}></VictoryBar>\n          </VictoryChart>\n        </div>\n      </section>\n    );\n  else return <AlternateText altText=\"Add pics so stats will be shown\"/>;\n};\n\nexport default UserStatsGraphs;\n"],"names":["_ref","altText","_jsx","className","styles","children","data","_React$useState","React","_React$useState2","_slicedToArray","graph","setGraph","_React$useState3","_React$useState4","total","setTotal","length","graphData","map","item","acessos","Number","x","title","y","_ref2","reduce","a","b","_jsxs","concat","VictoryPie","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","VictoryChart","VictoryBar","alignment","AlternateText"],"sourceRoot":""}